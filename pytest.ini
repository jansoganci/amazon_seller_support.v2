[pytest]
# Test discovery patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Custom markers
markers =
    integration: Integration tests that test multiple components together
    slow: Tests that are expected to be slow
    unit: Unit tests for individual components
    validator: Tests for validator components
    processor: Tests for processor components
    service: Tests for service components

# Test execution settings
addopts = 
    --verbose
    --strict-markers
    --tb=short
    --cov=app
    --cov-report=term-missing
    --cov-report=html
    --no-cov-on-fail

# Test directories
testpaths = tests

# Environment variables for testing
env =
    FLASK_ENV=testing
    TESTING=True
    DATABASE_URL=sqlite:///test.db

# Logging settings
log_cli = True
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Coverage settings
[coverage:run]
branch = True
source = app

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise NotImplementedError
    if __name__ == .__main__.:
    pass
    raise ImportError

[coverage:html]
directory = coverage_html 